/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package com.coders.cc;

import com.coders.cc.handler.FileManager;

import java.util.LinkedList;
import java.util.List;
import java.util.logging.Logger;

public class App {
    private final static Logger LOGGER = Logger.getLogger(App.class.getName());

    public static void main(String[] args) {
        String[] extensions = {"java"};
        String path = System.getProperty("user.dir");
        String toPath = null;
        for (int i = 0; i < args.length; i++) {
            if (args[i].equals("-t")) {
                if (i < args.length - 1) {
                    toPath = args[i + 1];
                }
            }
        }

        if (toPath == null) {
            System.err.println("bad path.");
            System.exit(1);
        }

        System.out.println("looking into " + path);
        System.out.println("copying into " + toPath);

        List<String> tmpExt = new LinkedList<>();

        boolean ext = false;
        for (int i = 0; i < args.length; i++) {
            if (args[i].equals("-h") || args[i].equals("--help")) {
                System.out.println("Example:");
                System.out.println("java -jar ./build/libs/CodeCopier.jar -t /tmp/mehran -x java xml gradle");
                System.exit(0);
            }

            if (args[i].equals("-x") || args[i].equals("--ext")) {
                ext = true;
                continue;
            }

            if (args[i].contains("-")) {
                ext = false;
                continue;
            }

            if (ext)
                tmpExt.add(args[i]);
        }

        if (tmpExt != null && tmpExt.size() > 0) {
            extensions = new String[tmpExt.size()];
            int c = 0;
            for (String extStr : tmpExt) {
                extensions[c++] = extStr;
            }
        }

        for (int i = 0; i < extensions.length; i++) {
            System.out.println(extensions[i]);
        }

        FileManager fileManager = new FileManager(path);
        fileManager.traverse();
        fileManager.cp(toPath, extensions);
    }
}
